
CS 6301.{013,016}: Implementation of advanced DS&A
Project 7 (Type 1)

This project is required for students who are not in the Basic track.
It is eligible for excellence credits.

Ver 1.0: Thu, Oct 23
Ver 1.1: Sun, Oct 26.  Output specification added.
Ver 1.2: Mon, Oct 27.  Detailed output only when |V| <= 50.
Ver 1.3: Tue, Nov 4.  Output is ordered by head of arcs (not tail).

Code base: Any data structures (built-in or downloaded), graphs (but
not graph algorithms), and sorting.  Do not download code for finding
minimum spanning trees.

Deadlines: 2 AM on Monday: Nov 10 (1st), Nov 17 (2nd), Nov 24 (3rd).

Implement the algorithm for finding minimum spanning trees in directed
graphs (see class notes).

Input specification:
The input is taken from stdin (Standard input), and contains a
sequence of lines.  The first line of input has 3 integers, |V|, |E|,
and s.  Nodes are numbered from 1..|V|.  The next |E| lines of input
have 3 integers in each line: u,v,w, that encodes an edge (u,v) of
weight w.  Assume that all weights are nonnegative integers.  The root
node is s.  Limits: |V| is between 3 and 1,000,000.  |E| is at most
10,000,000.  Assume that the graph has a directed spanning tree, rooted at s.

Output specification:
In the first line of the output, print the weight of a minimum spanning tree
(rooted at s), and the running time in msec.  Note that though the edge weights
are ints, the weight of an MST may not fit in an int.
If |V| is less than or equal to 50, in the next lines, output the edges of an
actual MST.  Order the edges of the MST by their heads.

Sample input:
5 7 1
1 5 8
1 4 7
1 3 6
4 3 3
3 5 6
5 3 2
5 2 1

Output:
17
(5,2)
(4,3)
(1,4)
(3,5)
